package com.skynet.skymed.controller;

import java.util.ArrayList;
import java.util.NoSuchElementException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.skynet.skymed.model.Especialidade;
import com.skynet.skymed.repository.EspecialidadeRepository;

@RestController

@RequestMapping("/especialidade")
public class EspecialidadeController{
	
	
	@Autowired
	private EspecialidadeRepository especialidadeDB;
	
	@GetMapping
	public ResponseEntity<ArrayList<Especialidade>> getObject(){
		var especialidade = especialidadeDB.findAll();
		
		if( especialidade.size() == 0) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
		}
		
		return ResponseEntity.ok((ArrayList<Especialidade>) especialidade);
	}
	
	@PostMapping
	public ResponseEntity<Especialidade> postEspecialidade(@RequestBody Especialidade object) {
		if (object.getId() != null) {
			var especialidade = getById(object.getId().intValue());
			
			if(especialidade.hasBody()) {
				return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(null);
			}
		}
		
		especialidadeDB.save(object);
		
	}
	
	@PutMapping
	public ResponseEntity<Especialidade> putEspecialidade(@RequestBody Especialidade object){
		if (object.getId() == null) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(null);
			
		}
		var especialidade = getById(object.getId().intValue());
		
		if(!especialidade.hasBody()) {
			return especialidade;
		}
		
		especialidadeDB.save(object);
	}
	
	@DeleteMapping("/{id}")
	@Override
	public void deleteObject(@PathVariable("id") Integer id) {
		especialidadeDB.deleteById((long)id);
		
	}
	
	@GetMapping("/{id}")
	@Override
	public Especialidade getById(@PathVariable("id") Integer id)  {
		
		return especialidadeDB.getOne((long)id);
	}
	
	

}
